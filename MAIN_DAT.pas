{$INCLUDE MAIN_DAT_IO}
{$INCLUDE MAIN_DAT_YMR}


{==============================================================================}
{=======================   РАСПОЛОЖЕНИЕ DAT-ФАЙЛА   ===========================}
{==============================================================================}
{=====   SKEY =  ID таблицы /                                             =====}
{=====           ID столбца /                                             =====}
{=====           ID строки  /                                             =====}
{=====           коррекция периода в месяцах / 0-по умолчанию             =====}
{=====           ID региона / 0-по умолчанию или название региона         =====}
{==============================================================================}
{=====   Если ID региона задан в виде ключа - медленная работа            =====}
{==============================================================================}
function TFMAIN.PathDat(const SYear, SMonth, SRegion, SKey: String): String;
var STab : String;
    Dat  : TDate;
begin
    STab   := CutSlovo(SKey, 1, CH_SPR);
    Dat    := SDatePeriod(SYear, SMonth);
    Result := TablesCounterToBankPrefix(STab, Dat);
    Result := PATH_BD0+Result+'\'+PATH_DATA+SetYMR(SYear, SMonth, SRegion, SKey);
end;


{==============================================================================}
{=======================  ФОРМИРУЕТ ПУТИ К ФОРМАМ =============================}
{==============================================================================}
function TFMAIN.PathFileForm(const SPref, SFile: String): String;
begin
    Result := PATH_BD0+SPref+'\'+PATH_FORM+SFile;
end;


{==============================================================================}
{===========================   ПУТЬ К DAT-ФАЙЛУ    ============================}
{==============================================================================}
function TFMAIN.PathRegion(const SYear, SMonth, SRegion: String): String;
begin
    Result := PATH_BD0+'\'+PATH_DATA+SYear+'\'+SMonth+'\'+SRegion+'.dat';
end;


{==============================================================================}
{==================   ПО ПУТИ ОПРЕДЕЛЯЕТ ПРЕФИКС БАНКА ========================}
{==============================================================================}
function TFMAIN.PathToBankPrefix(const SPath: String): String;
var I : Integer;
begin
    Result := SPath;
    Delete(Result, 1, Length(PATH_BD0));
    I := Pos('\', Result);
    If I > 0 then Delete(Result, I, Length(Result));
end;


{==============================================================================}
{====================   ПРЕФИКС БАНКА В ИНДЕКС БАНКА ==========================}
{==============================================================================}
function TFMAIN.BankPrefixToIndex(const SPref: String): Integer;
begin
    If IsIntegerStr(SPref) then Result := StrToInt(SPref)
                           else Result := 0;
end;

{==============================================================================}
{====================   ИНДЕКС БАНКА В ПРЕФИКС БАНКА ==========================}
{==============================================================================}
function TFMAIN.BankIndexToPrefix(const Ind: Integer): String;
begin
    Result := IntToStr(Ind);
    If Result = '0' then Result := '';
end;

